package builtins

import "github.com/scatternoodle/wflang/lang/types"

type Builtin struct {
	Name       string
	ReturnType types.BaseType
	Params     []types.BaseType
}

func Builtins() map[string]Builtin {
	return map[string]Builtin{
		"if":                           {Name: "if", ReturnType: types.BOOL},
		"min":                          {Name: "min", ReturnType: types.NUMBER},
		"max":                          {Name: "max", ReturnType: types.NUMBER},
		"contains":                     {Name: "contains", ReturnType: types.BOOL},
		"sum":                          {Name: "sum", ReturnType: types.NUMBER},
		"count":                        {Name: "count", ReturnType: types.NUMBER},
		"sumtime":                      {Name: "sumTime", ReturnType: types.NUMBER},
		"counttime":                    {Name: "countTime", ReturnType: types.NUMBER},
		"findfirsttime":                {Name: "findFirstTime", ReturnType: types.NUMBER},
		"sumschedule":                  {Name: "sumSchedule", ReturnType: types.NUMBER},
		"countschedule":                {Name: "countSchedule", ReturnType: types.NUMBER},
		"findfirstschedule":            {Name: "findFirstSchedule", ReturnType: types.SCHEDREC},
		"countexception":               {Name: "countException", ReturnType: types.NUMBER},
		"findfirsttordetail":           {Name: "findFirstTorDetail", ReturnType: types.TORDTL},
		"findfirstdayforward":          {Name: "findFirstDayForward", ReturnType: types.DATE},
		"findfirstdaybackward":         {Name: "findFirstDayBackward", ReturnType: types.DATE},
		"findfirstdeletedtime":         {Name: "findFirstDeletedTime", ReturnType: types.DATE},
		"longestconsecutiverange":      {Name: "longestConsecutiveRange", ReturnType: types.DATERNG},
		"firstconsecutiveday":          {Name: "firstConsecutiveDay", ReturnType: types.DATE},
		"lastconsecutiveday":           {Name: "lastConsecutiveDay", ReturnType: types.DATE},
		"findnthtime":                  {Name: "findNthTime", ReturnType: types.TIME},
		"accrued":                      {Name: "accrued", ReturnType: types.NUMBER},
		"accruedbefore":                {Name: "accruedBefore", ReturnType: types.NUMBER},
		"balance":                      {Name: "balance", ReturnType: types.NUMBER},
		"callsql":                      {Name: "callSql", ReturnType: types.OBJECT},
		"convertdttmbytimezone":        {Name: "convertDttmByTimezone", ReturnType: types.DTTM},
		"countgroupcalc":               {Name: "countGroupCalc", ReturnType: types.NUMBER},
		"countholidays":                {Name: "countHolidays", ReturnType: types.NUMBER},
		"getholiday":                   {Name: "getHoliday", ReturnType: types.STRING},
		"counthomecrewmembers":         {Name: "countHomeCrewMembers", ReturnType: types.NUMBER},
		"countshiftchanges":            {Name: "countShiftChanges", ReturnType: types.NUMBER},
		"employee_attribute_exists":    {Name: "employee_attribute_exists", ReturnType: types.BOOL},
		"employee_attribute":           {Name: "employee_attribute", ReturnType: types.EMPATTR},
		"getattributecalcdate":         {Name: "getAttributeCalcDate", ReturnType: types.DATE},
		"getbooleanfieldfromtor":       {Name: "getBooleanFieldFromTor", ReturnType: types.BOOL},
		"getdatefieldfromtor":          {Name: "getDateFieldFromTor", ReturnType: types.DATE},
		"getnumberfieldfromtor":        {Name: "getNumberFieldFromTor", ReturnType: types.NUMBER},
		"getpaycurrencycode":           {Name: "getPayCurrencyCode", ReturnType: types.STRING},
		"getselectfieldvaluefromtor":   {Name: "getSelectFieldValueFromTor", ReturnType: types.STRING},
		"getstringfieldfromtor":        {Name: "getStringFieldFromTor", ReturnType: types.STRING},
		"getsysdatebytimezone":         {Name: "getSysDateByTimezone", ReturnType: types.POLICY_ID},
		"ldlookup":                     {Name: "ldLookup", ReturnType: types.LDREC},
		"ldvalidate":                   {Name: "ldValidate", ReturnType: types.BOOL},
		"indexof":                      {Name: "indexof", ReturnType: types.NUMBER},
		"lengthofservice":              {Name: "lengthOfService", ReturnType: types.NUMBER},
		"makedate":                     {Name: "makeDate", ReturnType: types.DATE},
		"makedatetime":                 {Name: "makeDateTime", ReturnType: types.DTTM},
		"makedatetimerange":            {Name: "makeDateTimeRange", ReturnType: types.DTTMRNG},
		"paycodeinschedulemap":         {Name: "payCodeInScheduleMap", ReturnType: types.BOOL},
		"paycodeintimesheetmap":        {Name: "payCodeInTimeSheetMap", ReturnType: types.BOOL},
		"rangelookup":                  {Name: "rangeLookup", ReturnType: types.NUMBER},
		"round":                        {Name: "round", ReturnType: types.NUMBER},
		"roundup":                      {Name: "roundUp", ReturnType: types.NUMBER},
		"rounddown":                    {Name: "roundDown", ReturnType: types.NUMBER},
		"roundtoint":                   {Name: "roundToInt", ReturnType: types.NUMBER},
		"semimonthlyperiod":            {Name: "semiMonthlyPeriod", ReturnType: types.PERIOD},
		"substr":                       {Name: "substr", ReturnType: types.STRING},
		"tolowercase":                  {Name: "tolowercase", ReturnType: types.STRING},
		"touppercase":                  {Name: "touppercase", ReturnType: types.STRING},
		"minschedule":                  {Name: "minSchedule", ReturnType: types.NUMBER},
		"maxschedule":                  {Name: "maxSchedule", ReturnType: types.NUMBER},
		"avgschedule":                  {Name: "avgSchedule", ReturnType: types.NUMBER},
		"mintime":                      {Name: "minTime", ReturnType: types.NUMBER},
		"maxtime":                      {Name: "maxTime", ReturnType: types.NUMBER},
		"avgtime":                      {Name: "avgTime", ReturnType: types.NUMBER},
		"swipe_in_latitude_in_range":   {Name: "Swipe_in_latitude_in_range", ReturnType: types.BOOL},
		"swipe_in_longitude_in_range":  {Name: "Swipe_in_longitude_in_range", ReturnType: types.BOOL},
		"swipe_out_latitude_in_range":  {Name: "Swipe_out_latitude_in_range", ReturnType: types.BOOL},
		"swipe_out_longitude_in_range": {Name: "Swipe_out_longitude_in_range", ReturnType: types.BOOL},
		"sumexception":                 {Name: "sumException", ReturnType: types.NUMBER},
		"minexception":                 {Name: "minException", ReturnType: types.NUMBER},
		"maxexception":                 {Name: "maxException", ReturnType: types.NUMBER},
		"averageexception":             {Name: "averageException", ReturnType: types.NUMBER},
	}
}
